{"signature":"Arc+4J4iBDa6dZw6k9lH+grRO8LKq67u+iHu7Q/LIYSFqh3yB6+wnt59GMpAUUkLZUCkhEgiPgrNCnBispdWG99FurWlDZDOLuGnlnUUs3X1WylFdSdbPbVNlIKr9RMe6fCSV4wvSG8DpEILgTgKiQjlTx8sDWrExYoE2Jo0sR8HrNySLTY0mO+rhmMtwOvYbN28I1cWyt3T1V5XITs6frhFdwCBZ9uPUf9FMMG8LKKYf8Q3WgSwygK/u8Wzf9nCrisor22V631tUGPUYRXoBxqcowqhMCv9tM++TLhhx/cFQe4KgHri3iQVPoYvwhhidZ5LQZa+Wg0jH2WOwCyJL1E3MOlMVlXUhSDc47+wpnOKVPSucL8QRns8ZETookAiMDdMEbhxH6wTVuB8rWlPNzAXkjRf9+U7DIbcCqk35CwQrTSdJ9HnajUkT8P0QOBDYzoKg/m4l7RPSV8bDq/O+1kOWJwynN44zpBsdtueMxkTprzKwy1ZgpM1qTDWOdJ/BhdzepWjOx65VKlhTWO/d2S039jE3WN/NwgQIG91EzcewoM0QyDliko0Pdp3rYh4YARi2qYO1fxDn/JPDgBZ8iY+CSn17QXX4bMbE42z6IPv37NYnIL/k6mv2QcquW7hcprhkGkFNZdIwX0Qf80UCubneATwuEzk+K/5psw+AXzA","signedBy":"XtendM3 Team","signed":1726826261776,"message":"Signed by XtendM3 Team","extension":"{\"programModules\":{\"EXT198MI\":{\"program\":\"EXT198MI\",\"triggers\":{},\"transactions\":{\"ProcessVariance\":{\"sourceUuid\":\"deb5a11f-ccd8-4e09-95da-8c3408862174\",\"name\":\"ProcessVariance\",\"program\":\"EXT198MI\",\"description\":\"Process Invoice Variance Recodes\",\"active\":true,\"multi\":false,\"modified\":1722864077231,\"modifiedBy\":\"WLAM\",\"outputFields\":[],\"inputFields\":[],\"utilities\":[]}},\"batches\":{}}},\"utilities\":{},\"sources\":{\"deb5a11f-ccd8-4e09-95da-8c3408862174\":{\"uuid\":\"deb5a11f-ccd8-4e09-95da-8c3408862174\",\"updated\":1724811078074,\"updatedBy\":\"WLAM\",\"created\":1722864055573,\"createdBy\":\"WLAM\",\"apiVersion\":\"0.21\",\"beVersion\":\"16.0.0.20240621022400.5\",\"codeHash\":\"164593559B79C316131A46D09685015739C1B600866AD9C9CC261D69AEE2EDD9\",\"code\":\"\"}}}"}